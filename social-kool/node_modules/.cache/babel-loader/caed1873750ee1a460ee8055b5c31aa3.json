{"ast":null,"code":"import _defineProperty from \"/Users/agustdmybae/Desktop/web-projects/social-kool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _readOnlyError from \"/Users/agustdmybae/Desktop/web-projects/social-kool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport _slicedToArray from \"/Users/agustdmybae/Desktop/web-projects/social-kool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/agustdmybae/Desktop/web-projects/social-kool/src/pages/Post.js\";\nimport React from 'react';\nimport { Grid, Container, Image, Header, Segment, Icon, Comment, Form } from 'semantic-ui-react';\nimport Topics from '../components/Topics';\nimport { useParams } from 'react-router-dom';\nimport firebase from '../utils/firebase';\nimport 'firebase/compat/firestore';\nexport default function Post() {\n  var _this = this;\n  var _useParams = useParams(),\n    postId = _useParams.postId;\n  var _React$useState = React.useState({\n      author: {}\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    post = _React$useState2[0],\n    setPost = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    commentContent = _React$useState4[0],\n    setCommentContent = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isLoading = _React$useState6[0],\n    setIsLoading = _React$useState6[1];\n  var _React$useState7 = React.useState([]),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    comments = _React$useState8[0],\n    setComments = _React$useState8[1];\n  React.useEffect(function () {\n    //用 onSnaptshot 即時監聽、取代原本的 get+then\n    firebase.firestore().collection(\"posts\").doc(postId).onSnapshot(function (docSnapshot) {\n      var data = docSnapshot.data();\n      setPost(data);\n    });\n  });\n\n  //讀取文章的comments\n  React.useEffect(function () {\n    firebase.firestore().collection(\"posts\").doc(postId).collection(\"comments\").onSnapshot(function (collectionSnapshot) {\n      var data = collectionSnapshot.docs.map(function (doc) {\n        return doc.data(), _readOnlyError(\"data\");\n      });\n      setComments(data);\n    });\n  });\n\n  //判斷文章是否有被收藏過\n  var isCollected = post.collectedBy ? post.collectedBy.includes(firebase.auth().currentUser.uid) : false;\n  //判斷文章是否有被按讚過\n  var isLiked = post.likedBy ? post.likedBy.includes(firebase.auth().currentUser.uid) : false;\n  //檢查文章 active 功能 e.g. isLiked, isCollected\n  function toggle(isActive, field) {\n    var uid = firebase.auth().currentUser.uid;\n    firebase.firestore().collection(\"posts\").doc(postId).update(_defineProperty({}, field, isActive ? firebase.firestore.FieldValue.arrayRemove(uid) : firebase.firestore.FieldValue.arrayUnion(uid)));\n  }\n  function submitComment() {\n    setIsLoading(true);\n    //firestore batch: 對 firestore 一次進行多個操作、並確保同時完成\n    var firestore = firebase.firestore();\n    var batch = firestore.batch();\n    var postRef = firestore.collection(\"posts\").doc(postId);\n    batch.update(postRef, {\n      commentsCount: firebase.firestore.FieldValue.increment(1)\n    });\n    var commentsRef = postRef.collection('comments').doc();\n    batch.set(commentsRef, {\n      content: commentContent,\n      createdAt: firebase.firestore.Timestamp.now(),\n      author: {\n        uid: firebase.auth().currentUser.uid,\n        displayName: firebase.auth().currentUser.displayName || \"\",\n        photoURL: firebase.auth().currentUser.photoURL || \"\"\n      }\n    });\n    //真的送出batch的更新\n    //將comment文字重整清空\n    batch.commit().then(function () {\n      setCommentContent(\"\");\n      setIsLoading(false);\n    });\n  }\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Topics, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, post.author.photoURL ? /*#__PURE__*/React.createElement(Image, {\n    src: post.author.photoURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 49\n    }\n  }) : /*#__PURE__*/React.createElement(Icon, {\n    name: \"user circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 87\n    }\n  }), post.author.displayName || \"user\", /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, post.title, /*#__PURE__*/React.createElement(Header.Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, post.topic, \"*\", post.createdAt ? post.createdAt.toDate().toLocaleDateString() : \"time\")), /*#__PURE__*/React.createElement(Image, {\n    src: post.imageURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Segment, {\n    basic: true,\n    vertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, post.content), /*#__PURE__*/React.createElement(Segment, {\n    basic: true,\n    vertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"\\u7559\\u8A000 * \\u8B9A \", post.likedBy ? post.likedBy.length : 0, \" *\", /*#__PURE__*/React.createElement(Icon, {\n    name: \"thumbs up \".concat(isLiked ? \"\" : \"outline\"),\n    color: isLiked ? \"blue\" : \"grey\",\n    link: true,\n    onClick: function onClick() {\n      return toggle(isLiked, 'likedBy');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }), \" *\", /*#__PURE__*/React.createElement(Icon, {\n    name: \"bookmark \".concat(isCollected ? \"\" : \"outline\"),\n    color: isCollected ? \"blue\" : \"grey\",\n    link: true,\n    onClick: function onClick() {\n      return toggle(isCollected, 'collectedBy');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Comment.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    reply: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.TextArea, {\n    value: commentContent,\n    onChange: function onChange(c) {\n      return setCommentContent(c.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Form.Button, {\n    onClick: submitComment,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, \"\\u7559\\u8A00\")), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, \"\\u5171 \", post.commentsCount, \" \\u5247\\u7559\\u8A00\"), comments.map(function (comment) {\n    return /*#__PURE__*/React.createElement(Comment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n      src: comment.author.photoURL,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Comment.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Author, {\n      as: \"span\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 45\n      }\n    }, comment.author.displayName || \"使用者\"), /*#__PURE__*/React.createElement(Comment.Metadata, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 45\n      }\n    }, comment.createdAt.toDate().toLocaleString()), /*#__PURE__*/React.createElement(Comment.Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 45\n      }\n    }, comment.content)));\n  }))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"names":["React","Grid","Container","Image","Header","Segment","Icon","Comment","Form","Topics","useParams","firebase","Post","_this","_useParams","postId","_React$useState","useState","author","_React$useState2","_slicedToArray","post","setPost","_React$useState3","_React$useState4","commentContent","setCommentContent","_React$useState5","_React$useState6","isLoading","setIsLoading","_React$useState7","_React$useState8","comments","setComments","useEffect","firestore","collection","doc","onSnapshot","docSnapshot","data","collectionSnapshot","docs","map","_readOnlyError","isCollected","collectedBy","includes","auth","currentUser","uid","isLiked","likedBy","toggle","isActive","field","update","_defineProperty","FieldValue","arrayRemove","arrayUnion","submitComment","batch","postRef","commentsCount","increment","commentsRef","set","content","createdAt","Timestamp","now","displayName","photoURL","commit","then","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Row","Column","width","src","name","title","Subheader","topic","toDate","toLocaleDateString","imageURL","basic","vertical","length","concat","color","link","onClick","Group","reply","TextArea","value","onChange","c","target","Button","loading","comment","Avatar","Content","Author","as","Metadata","toLocaleString","Text"],"sources":["/Users/agustdmybae/Desktop/web-projects/social-kool/src/pages/Post.js"],"sourcesContent":["import React from 'react';\nimport { Grid, Container, Image, Header, Segment,Icon, Comment, Form } from 'semantic-ui-react';\nimport Topics from '../components/Topics';\nimport { useParams } from 'react-router-dom';\n\nimport firebase from '../utils/firebase';\nimport 'firebase/compat/firestore'\n\nexport default function Post(){\n    const{ postId }=useParams();\n    const [post, setPost]= React.useState({\n        author: {},\n    });\n    const [commentContent, setCommentContent] = React.useState(\"\");\n    const [isLoading, setIsLoading] = React.useState(false);\n    const [comments, setComments] = React.useState([]);\n    React.useEffect(()=>{\n        //用 onSnaptshot 即時監聽、取代原本的 get+then\n        firebase.firestore().collection(\"posts\").doc(postId).onSnapshot((docSnapshot)=>{\n            const data = docSnapshot.data();\n            setPost(data);\n        })\n    })\n\n    //讀取文章的comments\n    React.useEffect(()=>{\n        firebase.firestore().collection(\"posts\").doc(postId).collection(\"comments\").onSnapshot((collectionSnapshot)=>{\n            const data = collectionSnapshot.docs.map((doc) => {\n                return data = doc.data();\n            })\n            setComments(data);\n        });\n    })\n\n    //判斷文章是否有被收藏過\n    const isCollected = post.collectedBy ? post.collectedBy.includes(firebase.auth().currentUser.uid) : false;\n    //判斷文章是否有被按讚過\n    const isLiked = post.likedBy ? post.likedBy.includes(firebase.auth().currentUser.uid) : false;\n    //檢查文章 active 功能 e.g. isLiked, isCollected\n    function toggle(isActive, field){\n        const uid = firebase.auth().currentUser.uid;\n        firebase.\n            firestore().\n            collection(\"posts\").\n            doc(postId).\n            update({\n                [field]: isActive\n                    ? firebase.firestore.FieldValue.arrayRemove(uid)\n                    : firebase.firestore.FieldValue.arrayUnion(uid),\n            })\n    }\n\n    function submitComment(){\n        setIsLoading(true);\n        //firestore batch: 對 firestore 一次進行多個操作、並確保同時完成\n        const firestore = firebase.firestore();\n        const batch = firestore.batch();\n        const postRef = firestore.collection(\"posts\").doc(postId);\n\n        batch.update(postRef, {\n            commentsCount: firebase.firestore.FieldValue.increment(1),\n        })\n\n        const commentsRef = postRef.collection('comments').doc();\n        batch.set(commentsRef, {\n            content: commentContent,\n            createdAt: firebase.firestore.Timestamp.now(),\n            author: {\n                uid: firebase.auth().currentUser.uid,\n                displayName: firebase.auth().currentUser.displayName || \"\",\n                photoURL: firebase.auth().currentUser.photoURL || \"\",\n            }\n        });\n        //真的送出batch的更新\n        //將comment文字重整清空\n        batch.commit().then(()=>{\n            setCommentContent(\"\");\n            setIsLoading(false);\n        });\n    }\n\n    return(\n        <Container>\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column width={3}>\n                        <Topics/>\n                    </Grid.Column>\n                    <Grid.Column width={10}>\n                        {post.author.photoURL ? <Image src={post.author.photoURL}/> : <Icon name=\"user circle\"/>}\n                        {post.author.displayName || \"user\"}\n                        <Header>\n                            {post.title}\n                            <Header.Subheader>\n                                {post.topic}*{post.createdAt ? post.createdAt.toDate().toLocaleDateString() : \"time\"}\n                            </Header.Subheader>\n                        </Header>\n                        <Image src={post.imageURL}/>\n                        <Segment basic vertical>{post.content}</Segment>\n                        <Segment basic vertical>\n                            留言0 * 讚 {post.likedBy ? post.likedBy.length : 0} * \n                            <Icon \n                                name={`thumbs up ${isLiked ? \"\" : \"outline\"}`}\n                                color= {isLiked ? \"blue\" : \"grey\" } \n                                link\n                                onClick={()=>toggle(isLiked, 'likedBy')}\n                            /> * \n                            <Icon \n                                name={`bookmark ${isCollected ? \"\" : \"outline\"}`} \n                                color= {isCollected ? \"blue\" : \"grey\" }\n                                link \n                                onClick={()=>toggle(isCollected, 'collectedBy')}\n                            />\n                        </Segment>\n                        <Comment.Group>\n                            <Form reply>\n                                <Form.TextArea value={commentContent} onChange={(c)=>setCommentContent(c.target.value)}/>\n                                <Form.Button onClick={submitComment} loading={isLoading}>留言</Form.Button>\n                            </Form>\n                            <Header>共 {post.commentsCount} 則留言</Header>\n                            {comments.map((comment)=>{\n                                return (\n                                    <Comment>\n                                        <Comment.Avatar src={comment.author.photoURL}/>\n                                        <Comment.Content>\n                                            <Comment.Author as=\"span\">{comment.author.displayName || \"使用者\"}</Comment.Author>\n                                            <Comment.Metadata>{comment.createdAt.toDate().toLocaleString()}</Comment.Metadata> \n                                            <Comment.Text>{comment.content}</Comment.Text>\n                                        </Comment.Content>\n                                    </Comment>\n                                )\n                            })}\n                            \n                        </Comment.Group>\n                        \n                    </Grid.Column>\n                    <Grid.Column width={3}></Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Container>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}